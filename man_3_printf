.TH _PRINTF 3 "November 28, 2024" "1.0" "Custom C Library"

.SH NAME

_printf \- formatted output conversion.

.SH SYNOPSIS
.B #include "main.h"
.br
.BI "int _printf(const char *" format ", ...);"

.SH DESCRIPTION
The
.B _printf
function produces output according to a specified format, similar to the standard
.B printf
function in the C library.
.B format
string specifies the output format and may include format specifiers, which are replaced by the values specified in subsequent arguments. 
Text in the format string is copied to the output as-is.

Supported format specifiers:
.TP

.B %c
Prints a single character. The corresponding argument must be of type
.I int.
.TP

.B %s
Prints a string. The corresponding argument must be of type
.I char*.
.TP

.B %%
Prints a literal '%' character. No argument is required.
.TP
.B %d, %i

Prints a signed decimal integer. The corresponding argument must be of type
.I int..PP
If an unsupported specifier is provided, the function prints a '%' followed by the unsupported character.

.SH RETURN VALUE
The
.B _printf
function returns the total number of characters printed (excluding the null byte used to end output to strings).
If an error occurs, such as if the
.B format
string is
.I NULL,
the function returns
.B -1.

.SH EXAMPLES
Example usage of
.B _printf:
.PP
.nf

#include "main.h"
int main(void)
{
    _printf("Character: %c\\n", 'A':);
    _printf("String: %s\\n", "Hello, World!");
    _printf("Integer: %d\\n", 123);
    _printf("Percent: %%\\n");
    return 0;
}

.fi
.PP
Expected output:
.PP
.nf
Character: A
String: Hello, World!
Integer: 123
Percent: %
.fi

.SH NOTES

.B _printf
does not handle advanced formatting options, such as width, precision, or flags. 
Additionally, it does not support floating-point specifiers.
The function relies on internal helper functions, such as

.B write_function
and

.B write_number,
to handle low-level output and integer formatting.

.SH BUGS
- The function does not check for malformed format strings or unsupported specifiers beyond printing the specifier as-is.
- The behavior for non-printable characters or NULL strings in arguments is undefined.

.SH SEE ALSO
.B printf(3),
.B write(2),
.B va_start(3),
.B va_arg(3),
.B va_end(3)

.SH AUTHOR
This implementation of
.B _printf
was developed by Wong, Anna and Mao from Holberton Australia
